{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useInteraction = exports.useVariable = exports.useConfig = exports.useElementData = exports.useElementColumns = exports.useLoadingState = exports.useEditorPanelConfig = exports.usePlugin = void 0;\nconst react_1 = require(\"react\");\nconst Context_1 = require(\"./Context\");\nconst deepEqual_1 = require(\"../utils/deepEqual\");\n/**\n * Gets the entire plugin instance\n * @returns {PluginInstance} Context for the current plugin instance\n */\nfunction usePlugin() {\n  return (0, react_1.useContext)(Context_1.PluginContext);\n}\nexports.usePlugin = usePlugin;\n/**\n * Provides a setter for the Plugin's Config Options\n * @param {CustomPluginConfigOptions[]} nextOptions Updated possible Config Options\n */\nfunction useEditorPanelConfig(nextOptions) {\n  const client = usePlugin();\n  const optionsRef = (0, react_1.useRef)({});\n  (0, react_1.useEffect)(() => {\n    if (nextOptions == null) return;\n    if (!(0, deepEqual_1.deepEqual)(nextOptions, optionsRef.current)) {\n      client.config.configureEditorPanel(nextOptions);\n      optionsRef.current = nextOptions;\n    }\n  }, [client, nextOptions]);\n}\nexports.useEditorPanelConfig = useEditorPanelConfig;\n/**\n * React hook for Plugin Config loading state\n * @param {boolean} initialState Initial value to set loading state to\n * @returns {[boolean, Function]} Boolean value corresponding to loading state for plugin config and setter for loading state\n */\nfunction useLoadingState(initialState) {\n  const client = usePlugin();\n  const [loading, setLoading] = (0, react_1.useState)(() => {\n    client.config.setLoadingState(initialState);\n    return initialState;\n  });\n  return [loading, nextState => {\n    if (nextState === loading) return;\n    setLoading(nextState);\n    client.config.setLoadingState(nextState);\n  }];\n}\nexports.useLoadingState = useLoadingState;\n/**\n * Provides the latest column values from corresponding sheet\n * @param {string} id Sheet ID to retrieve from workbook\n * @returns {WorkbookElementColumns} Values of corresponding columns contained within the sheet\n */\nfunction useElementColumns(id) {\n  const client = usePlugin();\n  const [columns, setColumns] = (0, react_1.useState)({});\n  (0, react_1.useEffect)(() => {\n    if (id) {\n      return client.elements.subscribeToElementColumns(id, setColumns);\n    }\n  }, [client, id]);\n  return columns;\n}\nexports.useElementColumns = useElementColumns;\n/**\n * Provides the latest data values from corresponding sheet\n * @param {string} id Sheet ID to get element data from\n * @returns {WorkbookElementData} Element Data for corresponding sheet, if any\n */\nfunction useElementData(id) {\n  const client = usePlugin();\n  const [data, setData] = (0, react_1.useState)({});\n  (0, react_1.useEffect)(() => {\n    if (id) {\n      return client.elements.subscribeToElementData(id, setData);\n    }\n  }, [client, id]);\n  return data;\n}\nexports.useElementData = useElementData;\n/**\n * Provides the latest value for entire config or certain key within the config\n * @param {string} key Key within Plugin Config, optional\n * @returns Entire config if no key passed in or value for key within plugin config\n */\nfunction useConfig(key) {\n  const client = usePlugin();\n  const [config, setConfig] = (0, react_1.useState)(key != null ? client.config.getKey(key) : client.config.get());\n  (0, react_1.useEffect)(() => client.config.subscribe(newConfig => {\n    if (key != null && newConfig[key] !== config[key]) {\n      setConfig(newConfig[key]);\n    } else {\n      setConfig(newConfig);\n    }\n  }), [client]);\n  return config;\n}\nexports.useConfig = useConfig;\n/**\n * React hook for accessing a workbook variable\n * @param {string} id ID of variable within Plugin Config to use\n * @returns {[(WorkbookVariable | undefined), Function]} Constantly updating value of the variable and setter for the variable\n */\nfunction useVariable(id) {\n  const client = usePlugin();\n  const [workbookVariable, setWorkbookVariable] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    return client.config.subscribeToWorkbookVariable(id, setWorkbookVariable);\n  }, [client, id]);\n  const setVariable = (0, react_1.useCallback)(function () {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n    return client.config.setVariable(id, ...values);\n  }, [id]);\n  return [workbookVariable, setVariable];\n}\nexports.useVariable = useVariable;\n/**\n * React hook for accessing a workbook interaction selections state\n * @param {string} id ID of variable within Plugin Config to use\n * @returns {[(WorkbookSelection | undefined), Function]} Constantly updating selection state and setter thereof\n */\nfunction useInteraction(id, elementId) {\n  const client = usePlugin();\n  const [workbookInteraction, setWorkbookInteraction] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    return client.config.subscribeToWorkbookInteraction(id, setWorkbookInteraction);\n  }, [client, id]);\n  const setInteraction = (0, react_1.useCallback)(value => {\n    client.config.setInteraction(id, elementId, value);\n  }, [id]);\n  return [workbookInteraction, setInteraction];\n}\nexports.useInteraction = useInteraction;","map":{"version":3,"names":["Object","defineProperty","exports","value","useInteraction","useVariable","useConfig","useElementData","useElementColumns","useLoadingState","useEditorPanelConfig","usePlugin","react_1","require","Context_1","deepEqual_1","useContext","PluginContext","nextOptions","client","optionsRef","useRef","useEffect","deepEqual","current","config","configureEditorPanel","initialState","loading","setLoading","useState","setLoadingState","nextState","id","columns","setColumns","elements","subscribeToElementColumns","data","setData","subscribeToElementData","key","setConfig","getKey","get","subscribe","newConfig","workbookVariable","setWorkbookVariable","subscribeToWorkbookVariable","setVariable","useCallback","_len","arguments","length","values","Array","_key","elementId","workbookInteraction","setWorkbookInteraction","subscribeToWorkbookInteraction","setInteraction"],"sources":["C:/Users/natha/desktop/km-text-plugin/node_modules/@sigmacomputing/plugin/dist/react/hooks.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useInteraction = exports.useVariable = exports.useConfig = exports.useElementData = exports.useElementColumns = exports.useLoadingState = exports.useEditorPanelConfig = exports.usePlugin = void 0;\nconst react_1 = require(\"react\");\nconst Context_1 = require(\"./Context\");\nconst deepEqual_1 = require(\"../utils/deepEqual\");\n/**\n * Gets the entire plugin instance\n * @returns {PluginInstance} Context for the current plugin instance\n */\nfunction usePlugin() {\n    return (0, react_1.useContext)(Context_1.PluginContext);\n}\nexports.usePlugin = usePlugin;\n/**\n * Provides a setter for the Plugin's Config Options\n * @param {CustomPluginConfigOptions[]} nextOptions Updated possible Config Options\n */\nfunction useEditorPanelConfig(nextOptions) {\n    const client = usePlugin();\n    const optionsRef = (0, react_1.useRef)({});\n    (0, react_1.useEffect)(() => {\n        if (nextOptions == null)\n            return;\n        if (!(0, deepEqual_1.deepEqual)(nextOptions, optionsRef.current)) {\n            client.config.configureEditorPanel(nextOptions);\n            optionsRef.current = nextOptions;\n        }\n    }, [client, nextOptions]);\n}\nexports.useEditorPanelConfig = useEditorPanelConfig;\n/**\n * React hook for Plugin Config loading state\n * @param {boolean} initialState Initial value to set loading state to\n * @returns {[boolean, Function]} Boolean value corresponding to loading state for plugin config and setter for loading state\n */\nfunction useLoadingState(initialState) {\n    const client = usePlugin();\n    const [loading, setLoading] = (0, react_1.useState)(() => {\n        client.config.setLoadingState(initialState);\n        return initialState;\n    });\n    return [\n        loading,\n        nextState => {\n            if (nextState === loading)\n                return;\n            setLoading(nextState);\n            client.config.setLoadingState(nextState);\n        },\n    ];\n}\nexports.useLoadingState = useLoadingState;\n/**\n * Provides the latest column values from corresponding sheet\n * @param {string} id Sheet ID to retrieve from workbook\n * @returns {WorkbookElementColumns} Values of corresponding columns contained within the sheet\n */\nfunction useElementColumns(id) {\n    const client = usePlugin();\n    const [columns, setColumns] = (0, react_1.useState)({});\n    (0, react_1.useEffect)(() => {\n        if (id) {\n            return client.elements.subscribeToElementColumns(id, setColumns);\n        }\n    }, [client, id]);\n    return columns;\n}\nexports.useElementColumns = useElementColumns;\n/**\n * Provides the latest data values from corresponding sheet\n * @param {string} id Sheet ID to get element data from\n * @returns {WorkbookElementData} Element Data for corresponding sheet, if any\n */\nfunction useElementData(id) {\n    const client = usePlugin();\n    const [data, setData] = (0, react_1.useState)({});\n    (0, react_1.useEffect)(() => {\n        if (id) {\n            return client.elements.subscribeToElementData(id, setData);\n        }\n    }, [client, id]);\n    return data;\n}\nexports.useElementData = useElementData;\n/**\n * Provides the latest value for entire config or certain key within the config\n * @param {string} key Key within Plugin Config, optional\n * @returns Entire config if no key passed in or value for key within plugin config\n */\nfunction useConfig(key) {\n    const client = usePlugin();\n    const [config, setConfig] = (0, react_1.useState)(key != null ? client.config.getKey(key) : client.config.get());\n    (0, react_1.useEffect)(() => client.config.subscribe(newConfig => {\n        if (key != null && newConfig[key] !== config[key]) {\n            setConfig(newConfig[key]);\n        }\n        else {\n            setConfig(newConfig);\n        }\n    }), [client]);\n    return config;\n}\nexports.useConfig = useConfig;\n/**\n * React hook for accessing a workbook variable\n * @param {string} id ID of variable within Plugin Config to use\n * @returns {[(WorkbookVariable | undefined), Function]} Constantly updating value of the variable and setter for the variable\n */\nfunction useVariable(id) {\n    const client = usePlugin();\n    const [workbookVariable, setWorkbookVariable] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        return client.config.subscribeToWorkbookVariable(id, setWorkbookVariable);\n    }, [client, id]);\n    const setVariable = (0, react_1.useCallback)((...values) => client.config.setVariable(id, ...values), [id]);\n    return [workbookVariable, setVariable];\n}\nexports.useVariable = useVariable;\n/**\n * React hook for accessing a workbook interaction selections state\n * @param {string} id ID of variable within Plugin Config to use\n * @returns {[(WorkbookSelection | undefined), Function]} Constantly updating selection state and setter thereof\n */\nfunction useInteraction(id, elementId) {\n    const client = usePlugin();\n    const [workbookInteraction, setWorkbookInteraction] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        return client.config.subscribeToWorkbookInteraction(id, setWorkbookInteraction);\n    }, [client, id]);\n    const setInteraction = (0, react_1.useCallback)((value) => {\n        client.config.setInteraction(id, elementId, value);\n    }, [id]);\n    return [workbookInteraction, setInteraction];\n}\nexports.useInteraction = useInteraction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}