{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\desktop\\\\km-text-plugin\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Import Required Libraries\nimport { client, useConfig, useElementData, useElementColumns } from \"@sigmacomputing/plugin\";\nimport React from \"react\";\nimport parse from 'html-react-parser';\n\n// Import the CSS file for the 'Inter' font\nimport './styles.css';\n\n// Generate Source and Option Input Table in Sigma\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclient.config.configureEditorPanel([{\n  name: \"source\",\n  type: \"element\"\n}, {\n  name: \"title\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: false\n}, {\n  name: \"body\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: false\n}, {\n  name: \"attributes\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}, {\n  name: \"rowNumber\",\n  type: \"text\",\n  allowMultiple: false\n}, {\n  name: \"titleFontSize\",\n  type: \"text\",\n  allowMultiple: false\n}, {\n  name: \"articleFontSize\",\n  type: \"text\",\n  allowMultiple: false\n}]);\n\n// Generate Table Output and Render Content as HTML in the Viewport\nfunction RenderDataTable(_ref) {\n  let {\n    data,\n    titleName,\n    bodyName,\n    attributeNames\n  } = _ref;\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available for the specified row number.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  const renderCellContent = content => {\n    const tempContainer = document.createElement(\"div\");\n    tempContainer.innerHTML = content;\n    return tempContainer.textContent;\n  };\n  const bodyTextHTML = data[0][bodyName].replace(/\"\"/g, '\"');\n  const renderLink = (url, text) => {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      dangerouslySetInnerHTML: {\n        __html: text\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"#FFFFFF\",\n      padding: \"12px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                whiteSpace: \"nowrap\",\n                fontSize: \"24px\",\n                fontWeight: \"700\"\n              },\n              dangerouslySetInnerHTML: {\n                __html: data[0][titleName]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"14px\"\n            },\n            children: parse(bodyTextHTML)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), attributeNames.map((attributeName, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            width: \"125px\",\n            lineHeight: \"0.95\",\n            fontSize: \"12px\",\n            fontWeight: \"300\"\n          },\n          children: [attributeName, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          style: {\n            lineHeight: \"0.95\",\n            fontSize: \"12px\"\n          },\n          children: data[0][attributeName].startsWith(\"http\") ? renderLink(data[0][attributeName], data[0][attributeName]) : renderCellContent(data[0][attributeName])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"125px\",\n              height: \"1px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"data:image/gif\",\n              id: \"image\",\n              style: {\n                width: \"125px\",\n                height: \"1px\"\n              },\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"400px\",\n              height: \"1px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"data:image/gif\",\n              id: \"image\",\n              style: {\n                width: \"400px\",\n                height: \"1px\"\n              },\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 2\n  }, this);\n}\n\n// Declare Variables in Plugin\n_c = RenderDataTable;\nfunction App(_ref2) {\n  _s();\n  let {\n    bodyTextHTML\n  } = _ref2;\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const columnInfo = useElementColumns(config.source);\n  const {\n    title,\n    body,\n    attributes,\n    rowNumber\n  } = config;\n\n  // Check if Data Exists for Required Inputs and Assign and Memoize the attributes Array\n  if (title && body && attributes && Object.keys(columnInfo).length && columnInfo) {\n    var titleName = columnInfo[title].name;\n    var bodyName = columnInfo[body].name;\n    var numattributes = attributes.length;\n  }\n  const attributeNames = React.useMemo(() => {\n    const attributeNames = [];\n    if (numattributes && Object.keys(columnInfo).length) {\n      for (let i = 0; i < numattributes; i++) {\n        attributeNames.push(columnInfo[attributes[i]].name);\n      }\n    }\n    return attributeNames;\n  }, [columnInfo, attributes, numattributes]);\n\n  // Prepare Data for Use in Table\n  const parsedRowNum = parseInt(rowNumber, 10);\n  const data = React.useMemo(() => {\n    var _sigmaData$title;\n    const data = [];\n    const rowCount = ((_sigmaData$title = sigmaData[title]) === null || _sigmaData$title === void 0 ? void 0 : _sigmaData$title.length) || 0;\n    if (titleName && bodyName && attributeNames && rowCount > 0 && parsedRowNum >= 1 && parsedRowNum <= rowCount) {\n      const i = parsedRowNum - 1;\n      const row = {};\n      row[titleName] = sigmaData[title][i];\n      row[bodyName] = sigmaData[body][i];\n      for (let j = 0; j < numattributes; j++) {\n        row[attributeNames[j]] = sigmaData[attributes[j]][i];\n      }\n      data.push(row);\n    }\n    return data;\n  }, [title, body, attributes, numattributes, titleName, bodyName, sigmaData, attributeNames, parsedRowNum]);\n  return /*#__PURE__*/_jsxDEV(RenderDataTable, {\n    data: data,\n    titleName: titleName,\n    bodyName: bodyName,\n    attributeNames: attributeNames,\n    rowNumber: rowNumber\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/wPswt0rRh/WiQdMABNZfxS2oI=\", false, function () {\n  return [useConfig, useElementData, useElementColumns];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RenderDataTable\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["client","useConfig","useElementData","useElementColumns","React","parse","jsxDEV","_jsxDEV","config","configureEditorPanel","name","type","source","allowMultiple","RenderDataTable","_ref","data","titleName","bodyName","attributeNames","length","children","fileName","_jsxFileName","lineNumber","columnNumber","renderCellContent","content","tempContainer","document","createElement","innerHTML","textContent","bodyTextHTML","replace","renderLink","url","text","href","target","rel","dangerouslySetInnerHTML","__html","style","width","backgroundColor","padding","colSpan","whiteSpace","fontSize","fontWeight","map","attributeName","i","lineHeight","startsWith","height","src","id","alt","_c","App","_ref2","_s","sigmaData","columnInfo","title","body","attributes","rowNumber","Object","keys","numattributes","useMemo","push","parsedRowNum","parseInt","_sigmaData$title","rowCount","row","j","_c2","$RefreshReg$"],"sources":["C:/Users/natha/desktop/km-text-plugin/src/App.js"],"sourcesContent":["// Import Required Libraries\nimport { client, useConfig, useElementData, useElementColumns } from \"@sigmacomputing/plugin\";\nimport React from \"react\";\nimport parse from 'html-react-parser';\n\n// Import the CSS file for the 'Inter' font\nimport './styles.css';\n\n// Generate Source and Option Input Table in Sigma\nclient.config.configureEditorPanel([\n  {\n    name: \"source\",\n    type: \"element\",\n  },\n  {\n    name: \"title\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: false,\n  },\n  {\n    name: \"body\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: false,\n  },\n  {\n    name: \"attributes\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: true,\n  },\n  {\n    name: \"rowNumber\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n  {\n    name: \"titleFontSize\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n  {\n    name: \"articleFontSize\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n]);\n\n// Generate Table Output and Render Content as HTML in the Viewport\nfunction RenderDataTable({ data, titleName, bodyName, attributeNames }) {\n  if (data.length === 0) {\n    return <div>No data available for the specified row number.</div>;\n  }\n\n  const renderCellContent = (content) => {\n    const tempContainer = document.createElement(\"div\");\n    tempContainer.innerHTML = content;\n    return tempContainer.textContent;\n  };\n\n  const bodyTextHTML = data[0][bodyName].replace(/\"\"/g, '\"');\n\n  const renderLink = (url, text) => {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    );\n  };\n\n  return (\n\t<table style={{ width: \"100%\", backgroundColor: \"#FFFFFF\", padding: \"12px\"}}>\n      <tbody>\n        <tr>\n          <td colSpan=\"2\">\n            <b>\n              <div style={{ whiteSpace: \"nowrap\", fontSize: \"24px\", fontWeight: \"700\"}} dangerouslySetInnerHTML={{ __html: data[0][titleName] }}></div>\n            </b>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <div style={{ fontSize: \"14px\" }}>{parse(bodyTextHTML)}</div>\n          </td>\n        </tr>\n        {attributeNames.map((attributeName, i) => (\n          <tr key={i}>\n            <td style={{ width: \"125px\", lineHeight: \"0.95\", fontSize: \"12px\", fontWeight: \"300\" }}>\n              {attributeName}:\n            </td>\n            <td style={{ lineHeight: \"0.95\", fontSize: \"12px\" }}>\n              {data[0][attributeName].startsWith(\"http\") ? (\n                renderLink(data[0][attributeName], data[0][attributeName])\n              ) : (\n                renderCellContent(data[0][attributeName])\n              )}\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td colSpan=\"2\">\n            <div style={{ width: \"125px\", height: \"1px\" }}>\n              <img src=\"data:image/gif\" id=\"image\" style={{ width: \"125px\", height: \"1px\" }} alt=\"\" />\n            </div>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <div style={{ width: \"400px\", height: \"1px\" }}>\n              <img src=\"data:image/gif\" id=\"image\" style={{ width: \"400px\", height: \"1px\" }} alt=\"\" />\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n// Declare Variables in Plugin\nfunction App({ bodyTextHTML }) {\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const columnInfo = useElementColumns(config.source);\n  const { title, body, attributes, rowNumber } = config;\n\n  // Check if Data Exists for Required Inputs and Assign and Memoize the attributes Array\n  if (title && body && attributes && Object.keys(columnInfo).length && columnInfo) {\n    var titleName = columnInfo[title].name;\n    var bodyName = columnInfo[body].name;\n    var numattributes = attributes.length;\n  }\n\n  const attributeNames = React.useMemo(() => {\n    const attributeNames = [];\n    if (numattributes && Object.keys(columnInfo).length) {\n      for (let i = 0; i < numattributes; i++) {\n        attributeNames.push(columnInfo[attributes[i]].name);\n      }\n    }\n    return attributeNames;\n  }, [columnInfo, attributes, numattributes]);\n\n  // Prepare Data for Use in Table\n  const parsedRowNum = parseInt(rowNumber, 10);\n  const data = React.useMemo(() => {\n    const data = [];\n    const rowCount = sigmaData[title]?.length || 0;\n\n    if (\n      titleName &&\n      bodyName &&\n      attributeNames &&\n      rowCount > 0 &&\n      parsedRowNum >= 1 &&\n      parsedRowNum <= rowCount\n    ) {\n      const i = parsedRowNum - 1;\n      const row = {};\n      row[titleName] = sigmaData[title][i];\n      row[bodyName] = sigmaData[body][i];\n      for (let j = 0; j < numattributes; j++) {\n        row[attributeNames[j]] = sigmaData[attributes[j]][i];\n      }\n      data.push(row);\n    }\n\n    return data;\n  }, [\n    title,\n    body,\n    attributes,\n    numattributes,\n    titleName,\n    bodyName,\n    sigmaData,\n    attributeNames,\n    parsedRowNum,\n  ]);\n\n  return (\n    <RenderDataTable\n      data={data}\n      titleName={titleName}\n      bodyName={bodyName}\n      attributeNames={attributeNames}\n      rowNumber={rowNumber}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,cAAc,EAAEC,iBAAiB,QAAQ,wBAAwB;AAC7F,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,mBAAmB;;AAErC;AACA,OAAO,cAAc;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAP,MAAM,CAACQ,MAAM,CAACC,oBAAoB,CAAC,CACjC;EACEC,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACED,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAE,QAAQ;EAChBC,aAAa,EAAE;AACjB,CAAC,EACD;EACEH,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAE,QAAQ;EAChBC,aAAa,EAAE;AACjB,CAAC,EACD;EACEH,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,QAAQ;EACdC,MAAM,EAAE,QAAQ;EAChBC,aAAa,EAAE;AACjB,CAAC,EACD;EACEH,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZE,aAAa,EAAE;AACjB,CAAC,EACD;EACEH,IAAI,EAAE,eAAe;EACrBC,IAAI,EAAE,MAAM;EACZE,aAAa,EAAE;AACjB,CAAC,EACD;EACEH,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,MAAM;EACZE,aAAa,EAAE;AACjB,CAAC,CACF,CAAC;;AAEF;AACA,SAASC,eAAeA,CAAAC,IAAA,EAAgD;EAAA,IAA/C;IAAEC,IAAI;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAe,CAAC,GAAAJ,IAAA;EACpE,IAAIC,IAAI,CAACI,MAAM,KAAK,CAAC,EAAE;IACrB,oBAAOb,OAAA;MAAAc,QAAA,EAAK;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnE;EAEA,MAAMC,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,aAAa,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;IACnDF,aAAa,CAACG,SAAS,GAAGJ,OAAO;IACjC,OAAOC,aAAa,CAACI,WAAW;EAClC,CAAC;EAED,MAAMC,YAAY,GAAGjB,IAAI,CAAC,CAAC,CAAC,CAACE,QAAQ,CAAC,CAACgB,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EAE1D,MAAMC,UAAU,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;IAChC,oBACE9B,OAAA;MACE+B,IAAI,EAAEF,GAAI;MACVG,MAAM,EAAC,QAAQ;MACfC,GAAG,EAAC,qBAAqB;MACzBC,uBAAuB,EAAE;QAAEC,MAAM,EAAEL;MAAK;IAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC;EAEN,CAAC;EAED,oBACDlB,OAAA;IAAOoC,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,eAAe,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAM,CAAE;IAAAzB,QAAA,eACvEd,OAAA;MAAAc,QAAA,gBACEd,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAIwC,OAAO,EAAC,GAAG;UAAA1B,QAAA,eACbd,OAAA;YAAAc,QAAA,eACEd,OAAA;cAAKoC,KAAK,EAAE;gBAAEK,UAAU,EAAE,QAAQ;gBAAEC,QAAQ,EAAE,MAAM;gBAAEC,UAAU,EAAE;cAAK,CAAE;cAACT,uBAAuB,EAAE;gBAAEC,MAAM,EAAE1B,IAAI,CAAC,CAAC,CAAC,CAACC,SAAS;cAAE;YAAE;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACLlB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAIwC,OAAO,EAAC,GAAG;UAAA1B,QAAA,eACbd,OAAA;YAAKoC,KAAK,EAAE;cAAEM,QAAQ,EAAE;YAAO,CAAE;YAAA5B,QAAA,EAAEhB,KAAK,CAAC4B,YAAY;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACJN,cAAc,CAACgC,GAAG,CAAC,CAACC,aAAa,EAAEC,CAAC,kBACnC9C,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAIoC,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEU,UAAU,EAAE,MAAM;YAAEL,QAAQ,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAM,CAAE;UAAA7B,QAAA,GACpF+B,aAAa,EAAC,GACjB;QAAA;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLlB,OAAA;UAAIoC,KAAK,EAAE;YAAEW,UAAU,EAAE,MAAM;YAAEL,QAAQ,EAAE;UAAO,CAAE;UAAA5B,QAAA,EACjDL,IAAI,CAAC,CAAC,CAAC,CAACoC,aAAa,CAAC,CAACG,UAAU,CAAC,MAAM,CAAC,GACxCpB,UAAU,CAACnB,IAAI,CAAC,CAAC,CAAC,CAACoC,aAAa,CAAC,EAAEpC,IAAI,CAAC,CAAC,CAAC,CAACoC,aAAa,CAAC,CAAC,GAE1D1B,iBAAiB,CAACV,IAAI,CAAC,CAAC,CAAC,CAACoC,aAAa,CAAC;QACzC;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GAVE4B,CAAC;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWN,CACL,CAAC,eACFlB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAIwC,OAAO,EAAC,GAAG;UAAA1B,QAAA,eACbd,OAAA;YAAKoC,KAAK,EAAE;cAAEC,KAAK,EAAE,OAAO;cAAEY,MAAM,EAAE;YAAM,CAAE;YAAAnC,QAAA,eAC5Cd,OAAA;cAAKkD,GAAG,EAAC,gBAAgB;cAACC,EAAE,EAAC,OAAO;cAACf,KAAK,EAAE;gBAAEC,KAAK,EAAE,OAAO;gBAAEY,MAAM,EAAE;cAAM,CAAE;cAACG,GAAG,EAAC;YAAE;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACLlB,OAAA;QAAAc,QAAA,eACEd,OAAA;UAAIwC,OAAO,EAAC,GAAG;UAAA1B,QAAA,eACbd,OAAA;YAAKoC,KAAK,EAAE;cAAEC,KAAK,EAAE,OAAO;cAAEY,MAAM,EAAE;YAAM,CAAE;YAAAnC,QAAA,eAC5Cd,OAAA;cAAKkD,GAAG,EAAC,gBAAgB;cAACC,EAAE,EAAC,OAAO;cAACf,KAAK,EAAE;gBAAEC,KAAK,EAAE,OAAO;gBAAEY,MAAM,EAAE;cAAM,CAAE;cAACG,GAAG,EAAC;YAAE;cAAArC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ;;AAEA;AAAAmC,EAAA,GAxES9C,eAAe;AAyExB,SAAS+C,GAAGA,CAAAC,KAAA,EAAmB;EAAAC,EAAA;EAAA,IAAlB;IAAE9B;EAAa,CAAC,GAAA6B,KAAA;EAC3B,MAAMtD,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAM+D,SAAS,GAAG9D,cAAc,CAACM,MAAM,CAACI,MAAM,CAAC;EAC/C,MAAMqD,UAAU,GAAG9D,iBAAiB,CAACK,MAAM,CAACI,MAAM,CAAC;EACnD,MAAM;IAAEsD,KAAK;IAAEC,IAAI;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAG7D,MAAM;;EAErD;EACA,IAAI0D,KAAK,IAAIC,IAAI,IAAIC,UAAU,IAAIE,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CAAC7C,MAAM,IAAI6C,UAAU,EAAE;IAC/E,IAAIhD,SAAS,GAAGgD,UAAU,CAACC,KAAK,CAAC,CAACxD,IAAI;IACtC,IAAIQ,QAAQ,GAAG+C,UAAU,CAACE,IAAI,CAAC,CAACzD,IAAI;IACpC,IAAI8D,aAAa,GAAGJ,UAAU,CAAChD,MAAM;EACvC;EAEA,MAAMD,cAAc,GAAGf,KAAK,CAACqE,OAAO,CAAC,MAAM;IACzC,MAAMtD,cAAc,GAAG,EAAE;IACzB,IAAIqD,aAAa,IAAIF,MAAM,CAACC,IAAI,CAACN,UAAU,CAAC,CAAC7C,MAAM,EAAE;MACnD,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,aAAa,EAAEnB,CAAC,EAAE,EAAE;QACtClC,cAAc,CAACuD,IAAI,CAACT,UAAU,CAACG,UAAU,CAACf,CAAC,CAAC,CAAC,CAAC3C,IAAI,CAAC;MACrD;IACF;IACA,OAAOS,cAAc;EACvB,CAAC,EAAE,CAAC8C,UAAU,EAAEG,UAAU,EAAEI,aAAa,CAAC,CAAC;;EAE3C;EACA,MAAMG,YAAY,GAAGC,QAAQ,CAACP,SAAS,EAAE,EAAE,CAAC;EAC5C,MAAMrD,IAAI,GAAGZ,KAAK,CAACqE,OAAO,CAAC,MAAM;IAAA,IAAAI,gBAAA;IAC/B,MAAM7D,IAAI,GAAG,EAAE;IACf,MAAM8D,QAAQ,GAAG,EAAAD,gBAAA,GAAAb,SAAS,CAACE,KAAK,CAAC,cAAAW,gBAAA,uBAAhBA,gBAAA,CAAkBzD,MAAM,KAAI,CAAC;IAE9C,IACEH,SAAS,IACTC,QAAQ,IACRC,cAAc,IACd2D,QAAQ,GAAG,CAAC,IACZH,YAAY,IAAI,CAAC,IACjBA,YAAY,IAAIG,QAAQ,EACxB;MACA,MAAMzB,CAAC,GAAGsB,YAAY,GAAG,CAAC;MAC1B,MAAMI,GAAG,GAAG,CAAC,CAAC;MACdA,GAAG,CAAC9D,SAAS,CAAC,GAAG+C,SAAS,CAACE,KAAK,CAAC,CAACb,CAAC,CAAC;MACpC0B,GAAG,CAAC7D,QAAQ,CAAC,GAAG8C,SAAS,CAACG,IAAI,CAAC,CAACd,CAAC,CAAC;MAClC,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,aAAa,EAAEQ,CAAC,EAAE,EAAE;QACtCD,GAAG,CAAC5D,cAAc,CAAC6D,CAAC,CAAC,CAAC,GAAGhB,SAAS,CAACI,UAAU,CAACY,CAAC,CAAC,CAAC,CAAC3B,CAAC,CAAC;MACtD;MACArC,IAAI,CAAC0D,IAAI,CAACK,GAAG,CAAC;IAChB;IAEA,OAAO/D,IAAI;EACb,CAAC,EAAE,CACDkD,KAAK,EACLC,IAAI,EACJC,UAAU,EACVI,aAAa,EACbvD,SAAS,EACTC,QAAQ,EACR8C,SAAS,EACT7C,cAAc,EACdwD,YAAY,CACb,CAAC;EAEF,oBACEpE,OAAA,CAACO,eAAe;IACdE,IAAI,EAAEA,IAAK;IACXC,SAAS,EAAEA,SAAU;IACrBC,QAAQ,EAAEA,QAAS;IACnBC,cAAc,EAAEA,cAAe;IAC/BkD,SAAS,EAAEA;EAAU;IAAA/C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEN;AAACsC,EAAA,CArEQF,GAAG;EAAA,QACK5D,SAAS,EACNC,cAAc,EACbC,iBAAiB;AAAA;AAAA8E,GAAA,GAH7BpB,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}