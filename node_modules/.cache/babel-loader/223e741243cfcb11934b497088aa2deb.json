{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NathanWorkman\\\\datateam-sigma-plugins-km-text\\\\src\\\\App.js\";\n// Import Required Libraries\nimport { client, useConfig, useElementData, useElementColumns } from \"@sigmacomputing/plugin\";\nimport React from \"react\";\nimport parse from 'html-react-parser';\n\n// Import the CSS file for the 'Inter' font\nimport './styles.css';\n\n// Generate Source and Option Input Table in Sigma\nclient.config.configureEditorPanel([{\n  name: \"source\",\n  type: \"element\"\n}, {\n  name: \"title\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: false\n}, {\n  name: \"body\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: false\n}, {\n  name: \"attributes\",\n  type: \"column\",\n  source: \"source\",\n  allowMultiple: true\n}, {\n  name: \"rowNumber\",\n  type: \"text\",\n  allowMultiple: false\n}, {\n  name: \"titleFontSize\",\n  type: \"text\",\n  allowMultiple: false\n}, {\n  name: \"titleFontColor\",\n  type: \"text\",\n  allowMultiple: false\n}, {\n  name: \"minWidth\",\n  type: \"text\",\n  allowMultiple: false\n}]);\n\n// Generate Table Output and Render Content as HTML in the Viewport\nfunction RenderDataTable(_ref) {\n  var _this = this;\n  var data = _ref.data,\n    titleName = _ref.titleName,\n    bodyName = _ref.bodyName,\n    attributeNames = _ref.attributeNames,\n    titleFontSize = _ref.titleFontSize,\n    titleFontColor = _ref.titleFontColor,\n    minWidth = _ref.minWidth;\n  if (data.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    }, \"No data available for the specified row number.\");\n  }\n  var renderCellContent = function renderCellContent(content) {\n    var tempContainer = document.createElement(\"div\");\n    tempContainer.innerHTML = content;\n    tempContainer.style.fontSize = titleFontSize;\n    tempContainer.style.color = titleFontColor;\n    tempContainer.style.width = minWidth;\n    return tempContainer.textContent;\n  };\n  var bodyTextHTML = data[0][bodyName].replace(/\"\"/g, '\"');\n  var renderLink = function renderLink(url, text) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      dangerouslySetInnerHTML: {\n        __html: text\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      width: \"100%\",\n      padding: \"12px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      whiteSpace: \"nowrap\",\n      fontSize: \"24px\",\n      fontWeight: \"700\",\n      color: titleFontColor,\n      marginBottom: \"6px\"\n    },\n    dangerouslySetInnerHTML: {\n      __html: data[0][titleName]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"300\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, parse(bodyTextHTML)))), attributeNames.map(function (attributeName, i) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        width: \"125px\",\n        lineHeight: \"0.95\",\n        fontSize: \"12px\",\n        fontWeight: \"400\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, attributeName, \":\"), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        lineHeight: \"0.95\",\n        fontSize: \"12px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, data[0][attributeName].startsWith(\"http\") ? renderLink(data[0][attributeName], data[0][attributeName]) : renderCellContent(data[0][attributeName])));\n  }), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: minWidth,\n      height: \"1px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"data:image/gif\",\n    id: \"image\",\n    style: {\n      width: minWidth,\n      height: \"1px\"\n    },\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n// Declare Variables in Plugin\nfunction App(_ref2) {\n  var bodyTextHTML = _ref2.bodyTextHTML;\n  var config = useConfig();\n  var sigmaData = useElementData(config.source);\n  var columnInfo = useElementColumns(config.source);\n  var title = config.title,\n    body = config.body,\n    attributes = config.attributes,\n    rowNumber = config.rowNumber,\n    titleFontSize = config.titleFontSize,\n    titleFontColor = config.titleFontColor,\n    minWidth = config.minWidth; // Check if Data Exists for Required Inputs and Assign and Memoize the attributes Array\n  if (title && body && attributes && Object.keys(columnInfo).length && columnInfo) {\n    var titleName = columnInfo[title].name;\n    var bodyName = columnInfo[body].name;\n    var numattributes = attributes.length;\n  }\n  var attributeNames = React.useMemo(function () {\n    var attributeNames = [];\n    if (numattributes && Object.keys(columnInfo).length) {\n      for (var i = 0; i < numattributes; i++) {\n        attributeNames.push(columnInfo[attributes[i]].name);\n      }\n    }\n    return attributeNames;\n  }, [columnInfo, attributes, numattributes]);\n\n  // Prepare Data for Use in Table\n  var parsedRowNum = parseInt(rowNumber, 10);\n  var data = React.useMemo(function () {\n    var data = [];\n    var rowCount = sigmaData[title]?.length || 0;\n    if (titleName && bodyName && attributeNames && rowCount > 0 && parsedRowNum >= 1 && parsedRowNum <= rowCount) {\n      var i = parsedRowNum - 1;\n      var row = {};\n      row[titleName] = sigmaData[title][i];\n      row[bodyName] = sigmaData[body][i];\n      for (var j = 0; j < numattributes; j++) {\n        row[attributeNames[j]] = sigmaData[attributes[j]][i];\n      }\n      data.push(row);\n    }\n    return data;\n  }, [title, body, attributes, numattributes, titleName, bodyName, sigmaData, attributeNames, parsedRowNum, titleFontSize, titleFontColor, minWidth]);\n  return /*#__PURE__*/React.createElement(RenderDataTable, {\n    data: data,\n    titleName: titleName,\n    bodyName: bodyName,\n    attributeNames: attributeNames,\n    rowNumber: rowNumber,\n    titleFontSize: titleFontSize,\n    titleFontColor: titleFontColor,\n    minWidth: minWidth,\n    bodyTextHTML: bodyTextHTML,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  });\n}\nexport default App;","map":{"version":3,"names":["client","useConfig","useElementData","useElementColumns","React","parse","config","configureEditorPanel","name","type","source","allowMultiple","RenderDataTable","_ref","_this","data","titleName","bodyName","attributeNames","titleFontSize","titleFontColor","minWidth","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","renderCellContent","content","tempContainer","document","innerHTML","style","fontSize","color","width","textContent","bodyTextHTML","replace","renderLink","url","text","href","target","rel","dangerouslySetInnerHTML","__html","padding","colSpan","whiteSpace","fontWeight","marginBottom","map","attributeName","i","key","lineHeight","startsWith","height","src","id","alt","App","_ref2","sigmaData","columnInfo","title","body","attributes","rowNumber","Object","keys","numattributes","useMemo","push","parsedRowNum","parseInt","rowCount","row","j"],"sources":["C:/Users/NathanWorkman/datateam-sigma-plugins-km-text/src/App.js"],"sourcesContent":["// Import Required Libraries\nimport { client, useConfig, useElementData, useElementColumns } from \"@sigmacomputing/plugin\";\nimport React from \"react\";\nimport parse from 'html-react-parser';\n\n// Import the CSS file for the 'Inter' font\nimport './styles.css';\n\n// Generate Source and Option Input Table in Sigma\nclient.config.configureEditorPanel([\n  {\n    name: \"source\",\n    type: \"element\",\n  },\n  {\n    name: \"title\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: false,\n  },\n  {\n    name: \"body\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: false,\n  },\n  {\n    name: \"attributes\",\n    type: \"column\",\n    source: \"source\",\n    allowMultiple: true,\n  },\n  {\n    name: \"rowNumber\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n  {\n    name: \"titleFontSize\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n  {\n    name: \"titleFontColor\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n  {\n    name: \"minWidth\",\n    type: \"text\",\n    allowMultiple: false,\n  },\n]);\n\n// Generate Table Output and Render Content as HTML in the Viewport\nfunction RenderDataTable({ data, titleName, bodyName, attributeNames, titleFontSize, titleFontColor, minWidth }) {\n  if (data.length === 0) {\n    return <div>No data available for the specified row number.</div>;\n  }\n\n  const renderCellContent = (content) => {\n    const tempContainer = document.createElement(\"div\");\n    tempContainer.innerHTML = content;\n\ttempContainer.style.fontSize = titleFontSize;\n\ttempContainer.style.color = titleFontColor;\n\ttempContainer.style.width = minWidth;\n    return tempContainer.textContent;\n  };\n\n  const bodyTextHTML = data[0][bodyName].replace(/\"\"/g, '\"');\n\n  const renderLink = (url, text) => {\n    return (\n      <a\n        href={url}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        dangerouslySetInnerHTML={{ __html: text }}\n      />\n    );\n  };\n\n  return (\n\t<table style={{ width: \"100%\", padding: \"12px\"}}>\n      <tbody>\n        <tr>\n          <td colSpan=\"2\">\n            <b>\n              <div style={{ whiteSpace: \"nowrap\", fontSize: \"24px\", fontWeight: \"700\", color: titleFontColor, marginBottom: \"6px\" }} dangerouslySetInnerHTML={{ __html: data[0][titleName] }}></div>\n            </b>\n          </td>\n        </tr>\n        <tr>\n          <td colSpan=\"2\">\n            <div style={{ fontSize: \"12px\", fontWeight: \"300\" }}>{parse(bodyTextHTML)}</div>\n          </td>\n        </tr>\n        {attributeNames.map((attributeName, i) => (\n          <tr key={i}>\n            <td style={{ width: \"125px\", lineHeight: \"0.95\", fontSize: \"12px\", fontWeight: \"400\" }}>\n              {attributeName}:\n            </td>\n            <td style={{ lineHeight: \"0.95\", fontSize: \"12px\" }}>\n              {data[0][attributeName].startsWith(\"http\") ? (\n                renderLink(data[0][attributeName], data[0][attributeName])\n              ) : (\n                renderCellContent(data[0][attributeName])\n              )}\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td colSpan=\"2\">\n            <div style={{ width: minWidth, height: \"1px\" }}>\n              <img src=\"data:image/gif\" id=\"image\" style={{ width: minWidth, height: \"1px\" }} alt=\"\" />\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n\n// Declare Variables in Plugin\nfunction App({ bodyTextHTML }) {\n  const config = useConfig();\n  const sigmaData = useElementData(config.source);\n  const columnInfo = useElementColumns(config.source);\n  const { title, body, attributes, rowNumber, titleFontSize, titleFontColor, minWidth } = config;\n\n  // Check if Data Exists for Required Inputs and Assign and Memoize the attributes Array\n  if (title && body && attributes && Object.keys(columnInfo).length && columnInfo) {\n    var titleName = columnInfo[title].name;\n    var bodyName = columnInfo[body].name;\n    var numattributes = attributes.length;\n  }\n\n  const attributeNames = React.useMemo(() => {\n    const attributeNames = [];\n    if (numattributes && Object.keys(columnInfo).length) {\n      for (let i = 0; i < numattributes; i++) {\n        attributeNames.push(columnInfo[attributes[i]].name);\n      }\n    }\n    return attributeNames;\n  }, [columnInfo, attributes, numattributes]);\n\n  // Prepare Data for Use in Table\n  const parsedRowNum = parseInt(rowNumber, 10);\n  const data = React.useMemo(() => {\n    const data = [];\n    const rowCount = sigmaData[title]?.length || 0;\n\n    if (\n      titleName &&\n      bodyName &&\n      attributeNames &&\n      rowCount > 0 &&\n      parsedRowNum >= 1 &&\n      parsedRowNum <= rowCount\n    ) {\n      const i = parsedRowNum - 1;\n      const row = {};\n      row[titleName] = sigmaData[title][i];\n      row[bodyName] = sigmaData[body][i];\n      for (let j = 0; j < numattributes; j++) {\n        row[attributeNames[j]] = sigmaData[attributes[j]][i];\n      }\n      data.push(row);\n    }\n\n    return data;\n  }, [\n    title,\n    body,\n    attributes,\n    numattributes,\n    titleName,\n    bodyName,\n    sigmaData,\n    attributeNames,\n    parsedRowNum,\n\ttitleFontSize,\n\ttitleFontColor,\n\tminWidth,\n  ]);\n\n  return (\n    <RenderDataTable\n      data={data}\n      titleName={titleName}\n      bodyName={bodyName}\n      attributeNames={attributeNames}\n      rowNumber={rowNumber}\n      titleFontSize={titleFontSize}\n      titleFontColor={titleFontColor}\n      minWidth={minWidth}\n      bodyTextHTML={bodyTextHTML}\n    />\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}